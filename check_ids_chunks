#!/opt/perl/bin/perl
# Name: check_informix
# Description: Check Informix Waits
# Date: 2012-10-12
# Version: 1.0
# Platform: Solaris 10
# Author: Luke Simmons

use Getopt::Long;
use lib qw(/opt/plugins);
use lib qw(/opt/informix/scripts);
use Informix;
use utils qw($TIMEOUT %ERRORS);
use strict;

my $warning;
my $critical;
my $help;
my $usage;
my $TIMEOUT;
my $name;

# Name used for the output in nrpe
$name = "Check chunks";

# Timeout in seconds
$TIMEOUT = 30;

# Informix variables
my $INFORMIXDIR='';
my $INFORMIXSERVER="";

# Authentication
my $username = "";
my $password = "";

# Options
GetOptions(
		"critical:i" => \$critical,
		"warning:i" => \$warning,
		"help" => \$help,
		"usage" => \$usage
);

help() if defined($help) || defined($usage);

$ENV{'PATH'} = "/bin:/sbin:/usr/bin:/opt/csw/bin:$INFORMIXDIR/bin";
$ENV{'INFORMIXSERVER'} = $INFORMIXSERVER;

sub help {
	print "Usage:\n";	
	print "critical: $critical\n";
	print "\t$name\n";
	print "Example\n";
	if (defined $critical) {
		print "\t$name -c $critical -w $warning\n";
	} else {
		print "\t$name\n";
	}
	exit 0;
}

# Initiate object
my $ids = new Informix("sysmaster",$INFORMIXSERVER,$username,$password);
$ids->connect($username,$password);

my $result = "";

# The command(s) we're going to run / object we're going to call
my @result = $ids->checkChunks();

my $i = 0;
foreach my $row (@result) {
	$result .= "=" if $i % 2;
	$result .= $row;
	$result .= ";" if $i % 2;
	$i++;
}

# Timeout handler used 
$SIG{'ALRM'} = sub {
	print "Plugin timed out after $TIMEOUT seconds - CRITICAL\n";
	exit($ERRORS{'CRITICAL'});
};

# Install timeout handler, so that the plugin does not hang indefinitely.
alarm($TIMEOUT);

if ( defined $critical ) {

	if ($result eq "") {
		print "\u$name - CRITICAL - one or more processes have died unexpectedly\n";
		exit($ERRORS{'CRITICAL'});
	} elsif ($result <= $critical) {
		print "\u$name - CRITICAL | $result\n";
		exit($ERRORS{'CRITICAL'});
	} elsif ($result <= $warning) {
		print "\u$name - WARNING | $result\n";
		exit($ERRORS{'WARNING'});
	}

}

print "\u$name - OK | $result\n";
